#ifndef UBERSHADER_RENDERSYSTEM
#define UBERSHADER_RENDERSYSTEM

// ---------------- CONSTANT VALUES ---------------- //

static const int MaxBones = 128;
static const int LightClusterGridWidth = 16;
static const int LightClusterGridHeight = 8;
static const int LightClusterGridDepth = 24;
static const float LightClusterExpScale = 0.015625;
static const int VTVirtualPageCount = 1024;
static const int VTPageSize = 128;
static const int VTMaxMip = 6;
static const int VTMipSelectorScale = 2048;
static const uint LightTypeNone = 0;
static const uint LightTypeOmni = 1;
static const uint LightTypeOmniShadow = 2;
static const uint LightTypeSpotShadow = 3;
static const uint LightTypeAmbient = 4;
static const uint LightSpotShapeSquare = 65536;
static const uint LightSpotShapeRound = 131072;
static const uint LightProbeSize = 128;
static const uint LightProbeMaxMips = 7;
static const uint LightProbeMaxMip = 6;
static const uint LightProbeMaxSpecularMip = 5;
static const uint InstanceGroupStatic = 1;
static const uint InstanceGroupDynamic = 4;
static const uint InstanceGroupCharacter = 8;
static const uint InstanceGroupWeapon = 16;

// ---------------- DATA STRUCTURES ---------------- //

// ---------------- SHADER RESOURCES ---------------- //

#endif

// ---------------- CONSTANT VALUES ---------------- //

static const int NumberOfElements = 65536;
static const int BitonicBlockSize = 256;
static const int TransposeBlockSize = 16;
static const int MatrixWidth = 256;
static const int MatrixHeight = 256;

// ---------------- DATA STRUCTURES ---------------- //

// Fusion.Engine.Graphics.BitonicSort+SORT_DATA
// Marshal.SizeOf = 16
#ifndef __STRUCT_SORT_DATA
#define __STRUCT_SORT_DATA 1
struct SORT_DATA {
	uint       Level;                         // offset:    0
	uint       LevelMask;                     // offset:    4
	uint       Width;                         // offset:    8
	uint       Height;                        // offset:   12
};
#endif

// ---------------- SHADER RESOURCES ---------------- //

cbuffer __buffer0 : register(b0) {
	SORT_DATA SortData : packoffset(c0);
};
