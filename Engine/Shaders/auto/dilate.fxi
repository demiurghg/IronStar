// ---------------- CONSTANT VALUES ---------------- //

static const int LightClusterGridWidth = 16;
static const int LightClusterGridHeight = 8;
static const int LightClusterGridDepth = 24;
static const float LightClusterExpScale = 0.015625;
static const int VTVirtualPageCount = 1024;
static const int VTPageSize = 128;
static const int VTMaxMip = 6;
static const int VTMipSelectorScale = 2048;
static const uint LightTypeNone = 0;
static const uint LightTypeOmni = 1;
static const uint LightTypeOmniShadow = 2;
static const uint LightTypeSpotShadow = 3;
static const uint LightTypeAmbient = 4;
static const uint LightSpotShapeSquare = 65536;
static const uint LightSpotShapeRound = 131072;
static const uint LightProbeSize = 128;
static const uint LightProbeMaxMips = 7;
static const uint LightProbeMaxMip = 6;
static const uint LightProbeMaxSpecularMip = 5;
static const uint InstanceGroupStatic = 1;
static const uint InstanceGroupDynamic = 4;
static const uint InstanceGroupCharacter = 8;
static const uint InstanceGroupWeapon = 16;

// ---------------- DATA STRUCTURES ---------------- //

// ---------------- SHADER RESOURCES ---------------- //

// ---------------- CONSTANT VALUES ---------------- //

static const int BilateralBlockSizeX = 16;
static const int BilateralBlockSizeY = 16;

// ---------------- DATA STRUCTURES ---------------- //

// Fusion.Engine.Graphics.DilateFilter+DILATE
// Marshal.SizeOf = 64
struct DILATE {
	uint2      SourceXY;                      // offset:    0
	uint2      TargetXY;                      // offset:    8
	uint2      MaskXY;                        // offset:   16
	uint2      Dummy;                         // offset:   24
	float      Threshold;                     // offset:   32
	float      GainMask;                      // offset:   36
	float      reserved2;                     // offset:   40
	float      reserved3;                     // offset:   44
};

// ---------------- SHADER RESOURCES ---------------- //

cbuffer __buffer0 : register(b0) {
	DILATE Dilate : packoffset(c0);
};
Texture2D<float4>              Source                         : register(t0);
Texture2D<float4>              Mask                           : register(t1);
RWTexture2D<float4>            Target                         : register(u0);
