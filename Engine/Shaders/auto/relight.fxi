// ---------------- CONSTANT VALUES ---------------- //

static const int LightClusterGridWidth = 16;
static const int LightClusterGridHeight = 8;
static const int LightClusterGridDepth = 24;
static const float LightClusterExpScale = 0.015625;
static const int VTVirtualPageCount = 1024;
static const int VTPageSize = 128;
static const int VTMaxMip = 6;
static const int VTMipSelectorScale = 2048;
static const uint LightTypeNone = 0;
static const uint LightTypeOmni = 1;
static const uint LightTypeOmniShadow = 2;
static const uint LightTypeSpotShadow = 3;
static const uint LightTypeAmbient = 4;
static const uint LightSpotShapeSquare = 65536;
static const uint LightSpotShapeRound = 131072;
static const uint LightProbeSize = 128;
static const uint LightProbeMaxMips = 6;
static const uint LightProbeMaxMip = 6;
static const uint LightProbeMaxSpecularMip = 5;
static const uint InstanceGroupStatic = 1;
static const uint InstanceGroupDynamic = 4;
static const uint InstanceGroupCharacter = 8;
static const uint InstanceGroupWeapon = 16;

// ---------------- DATA STRUCTURES ---------------- //

// ---------------- SHADER RESOURCES ---------------- //

// ---------------- CONSTANT VALUES ---------------- //

static const int BlockSizeX = 16;
static const int BlockSizeY = 16;
static const int PrefilterBlockSizeX = 8;
static const int PrefilterBlockSizeY = 8;

// ---------------- DATA STRUCTURES ---------------- //

// Fusion.Engine.Graphics.GI.LightProbeRelighter+RELIGHT_PARAMS
// Marshal.SizeOf = 64
struct RELIGHT_PARAMS {
	uint       CubeIndex;                     // offset:    0
	float      RadiosityLevel;                // offset:    4
	float      Dummy0;                        // offset:    8
	float      Dummy1;                        // offset:   12
};

// ---------------- SHADER RESOURCES ---------------- //

cbuffer __buffer0 : register(b0) {
	RELIGHT_PARAMS RelightParams : packoffset(c0);
};
TextureCubeArray<float4>       GBufferColorData               : register(t0);
TextureCubeArray<float4>       GBufferNormalData              : register(t1);
Texture2D<float4>              LightMap0                      : register(t2);
Texture2D<float4>              LightMap1                      : register(t3);
TextureCube<float4>            SkyCube                        : register(t4);
SamplerState                   PointSampler                   : register(s0);
SamplerState                   LinearSampler                  : register(s1);
SamplerComparisonState         ShadowSampler                  : register(s2);
RWTexture2DArray<float4>       TargetCube                     : register(u0);
